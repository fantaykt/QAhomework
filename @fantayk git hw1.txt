ссылка на github : https://github.com/fantaykt/


JSON
 4. Создать внешний репозиторий c названием JSON. 
 создан на github
 5. Клонировать репозиторий JSON на локальный компьютер. 
 git clone https://github.com/fantaykt/json.git
 6. Внутри локального JSON создать файл “new.json”. 
 cd json
 touch new.json
 7. Добавить файл под гит.
 git add new.json
 8. Закоммитить файл.
 git add new.json
 9. Отправить файл на внешний GitHub репозиторий.
 git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json
	{
			"name": "Vasily Everstov",
			"age": "30",
			"pets": "0",
			"offer": "80000"
	}
	:wq

	
 11. Отправить изменения на внешний репозиторий.
 git add .
 git commit -m "добвлена информация"
 git push
 12. Создать файл preferences.json
 touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
  vim preferences.json
  {
        "movie": "Forrest Gump",
        "serial": "Star Gate: SG-1",
        "food": "Pelmeni",
        "season": "Winter",
		"country": "Australia"
  }
	:wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 touch skills.json
	 vim skills.json  
	   {
		  "skills": "QA skills",
		  "js" : "Junior js skills",
		  "auto QA" "Junior auto qa skills"
	  }
	:wq
 15. Отправить сразу 2 файла на внешний репозиторий.
 git add .
 git commit -m "Добавлены Preferences и Skills"
 git push
 16. На веб интерфейсе создать файл bug_report.json.
 создан файл
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 сохранен файл
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 добавлен баг репорт
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 сохранены изменения
 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull


XML
 21. Создать внешний репозиторий c названием XML.
 создан на github
 22. Клонировать репозиторий XML на локальный компьютер.
 git clone https://github.com/fantaykt/xml.git
 23. Внутри локального XML создать файл “new.xml”.
 cd xml
 touch new.xml
 24. Добавить файл под гит.
 git add .
 25. Закоммитить файл.
 git commit -m "создан файл new.xml"
 26. Отправить файл на внешний GitHub репозиторий.
 git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 vim new.xml
	<?xml version="1.0"?>
	<CAT>
	  <NAME>VasilyEverstov</NAME>
	  <AGE>30</AGE>
	  <PETS>not</PETS>
	  <OFFER>80000</OFFER>
	</CAT>
 28. Отправить изменения на внешний репозиторий.
 git add . 
 git commit -m "добавлены данные в файл  new.xml"
 git push
 29. Создать файл preferences.xml
 touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 vim preferences.xml
	 <?xml version="1.0"?>
	<CAT>
	  <movie>Forrest Gump</movie>
	  <serial>StarGate:SG-1</serial>
	  <food>pelmeni</food>
	  <season>winter</season>
	</CAT>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 touch skills.xml
 vim skills.xml
	<?xml version="1.0"?>
	<CAT>
		<skills>QA skills</skills>
		<js>Junior js skills</js>
		<autoQA>Junior auto qa skills</autoQA>
	</CAT>
 32. Сделать коммит в одну строку.
 git add . | git commit -m "добавлены 2 файла"
 33. Отправить сразу 2 файла на внешний репозиторий.
 git push
 34. На веб интерфейсе создать файл bug_report.xml.
 Создан файл в гитхаб
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Сохранены изменения
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 Создан баг репорт
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 Сохранен баг репорт
 38. Синхронизировать внешний и локальный репозиторий XML
 git pull
 
 TXT
 1. Создать внешний репозиторий c названием TXT.
 создан на github
 2. Клонировать репозиторий TXT на локальный компьютер.
  git clone https://github.com/fantaykt/txt.git
 3. Внутри локального TXT создать файл “new.txt”.
 cd txt
 touch new.txt
 4. Добавить файл под гит.
 git add .
 5. Закоммитить файл.
 git commit -m "добавлен файл new.txt"
 6. Отправить файл на внешний GitHub репозиторий.
 git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 vim new.txt
	ФИО Эверстов Василий
	лет 30
	домашние животные нет
	желаема зарлата от 80000
 :wq
 8. Отправить изменения на внешний репозиторий.
 git commit -m "добавлены данные"
 git push
 
 9. Создать файл preferences.txt
 touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 vim preferences.txt
	Любимый фильм: Форест Гамп
	Любимый сериал: Звездные врата: СГ-1
	Любимая еда: пельмени
	Любимое время года: Зима
	:wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 touch skills.txt
 vim skills.txt
	На курсе изучим скилы для Junior QA, js, Junior auto QA
	:wq

 12. Сделать коммит в одну строку.
git add . | git commit -m "добавлены 2 файла"
 13. Отправить сразу 2 файла на внешний репозиторий.
git push
 14. На веб интерфейсе создать файл bug_report.txt.
 создан файл bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 сохранены изменения
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 добавлен баг репорт
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 сохранены изменения
 18. Синхронизировать внешний и локальный репозиторий TXT
 git pull